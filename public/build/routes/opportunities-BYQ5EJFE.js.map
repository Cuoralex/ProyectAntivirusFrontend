{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/opportunities.tsx", "../../../app/components/OpportunityCard.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\opportunities.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\opportunities.tsx\");\n  import.meta.hot.lastModified = \"1740887580973.7627\";\n}\n// REMIX HMR END\n\n// Opportunities.tsx\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\n// routes/Opportunities.tsx\nimport { getOpportunities } from \"../utils/ProyectAntivirusFrontend\";\nimport OpportunityCard from \"./../components/OpportunityCard\";\n\n// Definimos la interfaz de Opportunity\n\n// Definimos el tipo de datos que el loader devolver\u00E1\n\n// Implementamos el loader\nexport const loader = async () => {\n  const opportunities = await getOpportunities();\n  return json({\n    opportunities\n  });\n};\n\n// Componente principal\nexport default function Opportunities() {\n  _s();\n  const {\n    opportunities\n  } = useLoaderData();\n  return <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold\">Oportunidades</h1>\r\n      <ul>\r\n        {opportunities.map(opportunity => <li key={opportunity.id} className=\"mt-2\">\r\n            <Link to={`/opportunities/${opportunity.id}`} className=\"text-blue-600\">\r\n              {opportunity.name}\r\n            </Link>\r\n            <OpportunityCard opportunity={opportunity} title={\"\"} description={\"\"} link={\"\"} />\r\n          </li>)}\r\n      </ul>\r\n    </div>;\n}\n_s(Opportunities, \"xBN9iBaE1fXxBPpME8HBBK/aopU=\", false, function () {\n  return [useLoaderData];\n});\n_c = Opportunities;\nvar _c;\n$RefreshReg$(_c, \"Opportunities\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\OpportunityCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\OpportunityCard.tsx\");\n  import.meta.hot.lastModified = \"1740886902231.8623\";\n}\n// REMIX HMR END\n\n// app/components/OpportunityCard.tsx\nimport React from 'react';\nconst OpportunityCard = ({\n  title,\n  description,\n  link\n}) => {\n  return <div className=\"border rounded-lg p-4 shadow-md\">\r\n      <h2 className=\"text-xl font-bold mb-2\">{title}</h2>\r\n      <p className=\"text-gray-700 mb-4\">{description}</p>\r\n      <a href={link} className=\"text-blue-500 hover:underline\">\r\n        M\u00E1s informaci\u00F3n\r\n      </a>\r\n    </div>;\n};\n_c = OpportunityCard;\nexport default OpportunityCard;\nvar _c;\n$RefreshReg$(_c, \"OpportunityCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACuBlB,kBAAqB;;;ACKf;AA3BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AAKA,IAAM,kBAAkB,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SAAO,mDAAC,SAAI,WAAU,mCAClB;AAAA,uDAAC,QAAG,WAAU,0BAA0B,mBAAxC;AAAA;AAAA;AAAA;AAAA,WAA8C;AAAA,IAC9C,mDAAC,OAAE,WAAU,sBAAsB,yBAAnC;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,IAC/C,mDAAC,OAAE,MAAM,MAAM,WAAU,iCAAgC,qCAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OALG;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,KAAK;AACL,IAAO,0BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,iBAAiB;AAElC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADMhB,IAAAA,0BAAA;AA9CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,gBAAiC;AACtC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,oDAAC,SAAI,WAAU,OAClB;AAAA,wDAAC,QAAG,WAAU,sBAAqB,6BAAnC;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAA,IAChD,oDAAC,QACE,wBAAc,IAAI,iBAAe,oDAAC,QAAwB,WAAU,QACjE;AAAA,0DAAC,QAAK,IAAI,kBAAkB,YAAY,MAAM,WAAU,iBACrD,sBAAY,QADf;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,2BAAgB,aAA0B,OAAO,IAAI,aAAa,IAAI,MAAM,MAA7E;AAAA;AAAA;AAAA;AAAA,aAAiF;AAAA,SAJ1C,YAAY,IAArB;AAAA;AAAA;AAAA;AAAA,WAKhC,CAAK,KANT;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,aAAa;AACvB,CAAC;AACDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_jsx_dev_runtime", "_c"]
}
